// -------------------------------------------------------------------------- //
//         Sitecore Install Framework - Sitecore SSL binding                  //
//                                                                            //
//  Run this configuration to install an SSL certificate on a website         //
//                                                                            //
// -------------------------------------------------------------------------- //

{
    "Parameters": {
        "SiteName": {
            "Type": "string",
            "Description": "The name of the site to be deployed."
        },
        "XConnectCert": {
            "Type": "string",
            "Description": "The certificate to use for encryption. Provide the name or the thumbprint.",
            "DefaultValue": "sc90u1.xconnect_client"
        },
        "HabitatSiteName": {
            "Type": "string",
            "Description": "The name of the root Habitat site deployed."
        }
    },
    "Variables": {
        // The sites full path on disk
        "Site.PhysicalPath": "[joinpath(environment('SystemDrive'), 'inetpub', 'wwwroot', parameter('HabitatSiteName'))]",
        "Site.DataFolder": "[joinpath(variable('Site.PhysicalPath'), 'App_Data')]",
        
        // The security certificate details
        "Security.CertificateStore":                "Cert:\\Localmachine\\My",
        "Security.RootCertificateStore":            "Cert:\\Localmachine\\Root",
        "Security.RootCertificateFileName":         "DO_NOT_TRUST_SitecoreRootCert",
        "Security.XConnect.CertificateThumbprint":  "[GetCertificateThumbprint(parameter('XConnectCert'), variable('Security.CertificateStore'))]",
        "Security.XConnect.CertificatePath":        "[joinpath(variable('Security.CertificateStore'), variable('Security.XConnect.CertificateThumbprint'))]"
    },
    "Tasks": {
        // Tasks are separate units of work in a configuration.
        // Each task is an action that will be completed when Install-SitecoreConfiguration is called.
        // By default, tasks are applied in the order they are declared.
        // Tasks may reference Parameters, Variables, and config functions.

        "StopWebsite": {
            // Stops the website if it is running.
            "Type": "ManageWebsite",
            "Params": {
                "Name": "[parameter('HabitatSiteName')]",
                "Action": "Stop"
            }
        },
        "CreateBindings": {
            // Configures the site bindings for the website.
            "Type": "WebBinding",
            "Params": {
                "SiteName": "[parameter('HabitatSiteName')]",
                "Add": [ { "HostHeader": "[parameter('SiteName')]" } ]
            }
        },
        "CreateHostHeader": {
            // Sets a hostheader for the website.
            "Type": "HostHeader",
            "Params": {
                "HostName": "[parameter('SiteName')]"
            }
        },
        "SetCertStorePermissions": {
            // Set permissions for the services to access the client certificate.
            "Type": "FilePermissions",
            "Params": {
                "Path": "[ResolveCertificatePath(variable('Security.XConnect.CertificatePath'))]",
                "Rights": [
                    {
                        "User": "[concat('IIS AppPool\\', parameter('HabitatSiteName'))]",
                        "FileSystemRights": [ "Read" ],
                        "InheritanceFlags": [ "None" ]
                    }
                ]
            }
        },
//        "CreateBindingsWithDevelopmentThumprint": {
//           // Creates a new thumprint with a custom CA
//            "Type": "AddWebFeatureSSL",
//            "Params": {
//                "HostName": "[parameter('SiteName')]",
//                "OutputDirectory": "[variable('Site.DataFolder')]"
//            }
//        },
        "StartWebsite": {
            // Starts the website if it is stopped.
            "Type": "ManageWebsite",
            "Params": {
                "Name": "[parameter('HabitatSiteName')]",
                "Action": "Start"
            }
        }
    }
}